/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */

package io.swagger.client.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class ViewClaimRecord (
  /* The primary key of the claim & claim id used by the estate (NEW FIELD)  */
  claimId: Option[Double],
  /* The name of the actual claimant where the claim is not beng made by the actual claimant. This should be used concatenated with createdBy when displaying the claim (NEW FIELD)  */
  claimOnBehalfOf: Option[String],
  /* The claim registration that generated the claim.  */
  claimRegistrationId: Option[Double],
  /* Needs to be captured in a new field coming from ONC_POTENTIAL_ONLINE_CLAIMS  */
  claimRegistrationType: Option[ViewClaimRecordEnums.ClaimRegistrationType],
  /* The claim type  */
  claimType: Option[String],
  /* The type of claim  */
  claimChannelType: Option[ViewClaimRecordEnums.ClaimChannelType],
  /* The type of claim made  */
  transactionCode: Option[String],
  /* The account that created the claim - could be created from the initial statement of affairs, the insolvency officer or the creditor (or agent).   */
  claimCreatedBy: Option[String],
  /* The name of the persn creating the claim   */
  claimCreatedName: Option[String],
  /* The status of the claim   */
  claimStatus: Option[ViewClaimRecordEnums.ClaimStatus],
  /* The date that the claim was created   */
  claimCreated: Option[Date],
  /* The person (user account) that last update the claim record.   */
  claimLastUpdatedBy: Option[String],
  /* The user name of the person who last update the claim.   */
  claimLastUpdatedName: Option[String],
  /* The dateTime the claim was last updated.   */
  claimLastUpdated: Option[DateTime],
  /* The version (aka revision) of the claim.   */
  claimVersion: Option[Double],
  /* The date on which the (current) status for the claim became current.   */
  claimStatusdate: Option[Date],
  /* Unknown   */
  claimManualSourceCode: Option[String],
  /* Boolean indicating whether claim is being appealed in the courts.   */
  claimUnderAppeal: Option[Boolean],
  /* The (payment) priority of the claim (once claim becomes part of the estate).   */
  claimPriority: Option[Double],
  /* The reference supplied by the creditor for the claim. Not necessarily unique (many claims may well have the same reference).   ### NOTE If longer than 12 digits it can't appear on the statement  */
  claimCreditorReference: Option[String],
  /* The value of the claim as notified by the debtor.   */
  claimNotifiedValue: Option[Double],
  /* The value to be paid on the claim by the estate.   */
  claimValue: Option[Double],
  /* Unknown, mandatory   */
  claimContractInterestYn: Option[Boolean],
  /* Unknown, mandatory  */
  claimValueTbaYn: Option[Boolean],
  /* The IRD number of the claimant   */
  claimIrdNumber: Option[String],
  /* Does the claim include GST for the Official Assignee?   */
  claimIncludeOaGstYn: Option[Boolean],
  /* The calculated amount of GST that needs to be paid on the claim for the OA.   */
  claimOaGstAmount: Option[Double],
  /* The tax rate payable on a claim for wages.   */
  claimWagesTaxRate: Option[Double],
  /* Comments from the case officer(s) about the claim   */
  claimComments: Option[String],
  /* The date that the case officer was made aware of the claim??   */
  claimItsAwaredate: Option[Date],
  /* The date the claim was lodged with ITS.   */
  claimLodgedWithItsdate: Option[DateTime],
  /* Unknown   */
  claimAdmittedValue: Option[Double],
  /* If a claim was withdrawn (can only be don as the creditor) the reason for this action.   */
  claimWithdrawnReason: Option[String],
  /* The user account that withdrew the claim.   */
  claimWithdrawnBy: Option[String],
  /* The name of the user that withdrew the claim.   */
  claimWithdrawnByName: Option[String],
  /* The data the creditor withdrew the claim.   */
  claimWithdrawndate: Option[Date],
  /* The currency (code) if the claim. Loosely mapped to the ISO4217 country codes. Currently updated infrequently   */
  claimCurCode: Option[String],
  /* Unknown   */
  creditorId: Option[Double],
  /* Unknown   */
  organisationId: Option[Double],
  /* Unknown   */
  claimOncId: Option[Double],
  /* Where claims are linked to multiple estates, both estate journals need to be kept in synch. This shows the last date that either claim was paid by either estate.   */
  claimJointPaidTodate: Option[Double],
  /* The tenancy or \"ringfence\" that the estate and claims belong to. Effectively an enumerator.   */
  claimRingfenceTypeCode: Option[ViewClaimRecordEnums.ClaimRingfenceTypeCode],
  /* Comment from insolvency officer when changing claim meta-data   */
  claimReasonForChange: Option[String],
  /* Boolean flag recoding if alert has been sent.   */
  claimLargeClmFiledAlertSent: Option[String],
  /* Flag recording if a creditor report has been sent.   */
  claimCredRptSent: Option[String],
  links: Option[Seq[Link]]
) extends ApiModel

object ViewClaimRecordEnums {

  type ClaimRegistrationType = ClaimRegistrationType.Value
  type ClaimChannelType = ClaimChannelType.Value
  type ClaimStatus = ClaimStatus.Value
  type ClaimRingfenceTypeCode = ClaimRingfenceTypeCode.Value
  object ClaimRegistrationType extends Enumeration {
    val CourtAwardedYouAdjudicationapplicationCosts = Value("Court awarded you adjudication/application costs")
    val ClaimForWagesHolidayPayOrRedundancy = Value("Claim for wages, holiday pay or redundancy")
    val Other = Value("Other")
    val SecuredDebt = Value("Secured debt")
    val CourtAction = Value("Court action")
    val InterestAwardedByACourtOrAgreedToInAContract = Value("Interest awarded by a Court or agreed to in a contract")
  }

  object ClaimChannelType extends Enumeration {
    val OCL = Value("OCL")
    val MCL = Value("MCL")
  }

  object ClaimStatus extends Enumeration {
    val Errored = Value("Errored")
    val Admitted = Value("Admitted")
    val Potential = Value("Potential")
    val Received = Value("Received")
    val Withdrawn = Value("Withdrawn")
    val Rejected = Value("Rejected")
    val Suspended = Value("Suspended")
    val Duplicate = Value("Duplicate")
  }

  object ClaimRingfenceTypeCode extends Enumeration {
    val ITS = Value("ITS")
    val CP = Value("CP")
    val IE = Value("IE")
  }

}

