/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */

package io.swagger.client.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class Address (
  /* boolean  */
  dcAdvice: Option[Boolean],
  /* A physical address - does not need to be a deliverable postal address  */
  addressServiceId: Option[Double],
  /* boolean to indicate whether the address was advised by the debtor  */
  debtorAdvisedYn: Option[Boolean],
  /* flag to indicate whther the address is a delverable postal address  */
  isPostalAddress: Option[Boolean],
  /*  */
  addressServiceAddress: Option[String],
  /* Care of address  */
  careOf: Option[String],
  /* the primary identifier for the address record  */
  addressId: Option[Double],
  /* Enum of the valid contact address types  */
  addressType: Option[AddressEnums.AddressType],
  /* the (current) version number of the contact address record  */
  version: Option[Double],
  /* the date the address record was created  */
  created: Option[Date],
  /* the user that created the address record  */
  createdBy: Option[String],
  /* The name of the user that created the address record  */
  createdName: Option[String],
  /* The date that the address record was last updated  */
  lastUpdated: Option[Date],
  /* the username the last updated the address record  */
  lastUpdatedBy: Option[String],
  /* the naem of the user that last updated the address record  */
  lastUpdatedName: Option[String],
  /* flag to indicate if the record is 'current' and as such, in use for the contact  */
  isCurrent: Option[Boolean],
  /* flag indicating if this address can be used for correspondence  */
  correspondenceYn: Option[Boolean],
  /* The date that this address is valid from.  */
  validFrom: Option[Date],
  /* unkown  */
  argId: Option[Double],
  /* join to the contact record  */
  contactId: Option[Double],
  /* the date after wich this address should be considered invalid  */
  validTo: Option[Date],
  /* Notes about this address  */
  notes: Option[String],
  /*  */
  isdCode: Option[String],
  /* area code for phone number  */
  areaCode: Option[String],
  /* phone number 817 8172  */
  number: Option[String],
  /* enum of the type of phone number  */
  phoneTypeCode: Option[String],
  /* street name  */
  streetName: Option[String],
  /* the type of physical address  */
  physicalAddressTypeCode: Option[AddressEnums.PhysicalAddressTypeCode],
  /* Flat or office number  */
  flatOfficeNumber: Option[String],
  /* street number  */
  streetNumber: Option[String],
  /* Postal address  */
  postalAddress: Option[String],
  /* PO Box address  */
  poBox: Option[String],
  /* City or town  */
  cityTown: Option[String],
  /* country code  */
  countryCode: Option[String],
  /* Suburb  */
  suburb: Option[String],
  /* post code  */
  postcode: Option[String],
  /* email address  */
  email: Option[String],
  /* flag indicating whether contact wons property  */
  ownPropertyYn: Option[Boolean]
) extends ApiModel

object AddressEnums {

  type AddressType = AddressType.Value
  type PhysicalAddressTypeCode = PhysicalAddressTypeCode.Value
  object AddressType extends Enumeration {
    val PHY = Value("PHY")
    val TEL = Value("TEL")
    val EML = Value("EML")
    val PST = Value("PST")
  }

  object PhysicalAddressTypeCode extends Enumeration {
    val REG = Value("REG")
    val RES = Value("RES")
    val STR = Value("STR")
    val SVC = Value("SVC")
  }

}

