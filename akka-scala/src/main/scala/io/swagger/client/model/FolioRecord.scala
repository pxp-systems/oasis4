/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */

package io.swagger.client.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class FolioRecord (
  /* Boolean indicating whether the folio has been saved to linked estates. */
  folioSavedToLinkedEstatesYn: Option[Boolean],
  /* \"Online Claim Id\" a.k.a The Claim Registration Id  */
  claimRegistrationId: Option[Double],
  /* The primary identifier of the folio record. */
  folioId: Option[Double],
  /* The sub-number of the folio. */
  foiolSequence: Option[Double],
  /*  */
  folioType: Option[FolioRecordEnums.FolioType],
  /*  */
  folioStatus: Option[FolioRecordEnums.FolioStatus],
  /* The id of the online file */
  foiolOlfId: Option[Double],
  /* Defaults to mirror document type, but may be edited by the user. */
  folioOnlineDescription: Option[String],
  /* Defaults to mirror document type, but may be edited by the user. */
  folioReference: Option[String],
  /* Control visibility for the purposes OIA requests */
  folioProtectionStatus: Option[FolioRecordEnums.FolioProtectionStatus],
  /* The version / revision number of the folio. */
  folioVersion: Option[Double],
  /* The user account that last updated the record. */
  folioLastUpdatedBy: Option[String],
  /* The name of the user that last updated the folio. */
  folLastUpdatedName: Option[String],
  /* The datetime dd-mmm-yyyy hh:mm that the folio was last updated  */
  folioLastUpdated: Option[DateTime],
  /* The datetime dd-mmm-yyyy hh:mm that the folio was created */
  folioCreated: Option[DateTime],
  /* The username of the user that created the folio. */
  folioCreatedBy: Option[String],
  /* The name of the user that created the folio. */
  folioCreatedName: Option[String],
  /* Is required for Outbound correspondence but optional for Inbound and Internal */
  folioDtpId: Option[Double],
  /* barcode - applicable to physical files */
  folioBarcode: Option[Double],
  /* box number - applicable to physical files */
  folioBoxNumber: Option[Double],
  /* ?? */
  folioAdId: Option[Double],
  /* Comments about the folio. */
  folioComments: Option[String],
  /* If marked as confidential, the reason for doing so. */
  folConfidentialityReason: Option[String],
  /* Whether the folio is confidential or not - could actually be a boolean */
  folioConfidentialityStatus: Option[FolioRecordEnums.FolioConfidentialityStatus],
  /* ?? */
  folioBliId: Option[Double],
  /* ?? */
  folioPreId: Option[Double],
  /* ?? */
  folioPrimaryCspSetCode: Option[String],
  /* ?? */
  folioPflId: Option[Double],
  /*  */
  folioSmsText: Option[String],
  /* Date phisical files were destroyed */
  folioDestructiondate: Option[Date],
  /* ?? */
  folioRecipientReceiverYn: Option[Boolean],
  /* ?? */
  folioRecipientCreditorYn: Option[Boolean],
  /* ?? */
  folioRecipientDbtShldrDirYn: Option[Boolean]
) extends ApiModel

object FolioRecordEnums {

  type FolioType = FolioType.Value
  type FolioStatus = FolioStatus.Value
  type FolioProtectionStatus = FolioProtectionStatus.Value
  type FolioConfidentialityStatus = FolioConfidentialityStatus.Value
  object FolioType extends Enumeration {
    val OUTBOUND = Value("OUTBOUND")
    val INTERNAL = Value("INTERNAL")
    val INBOUND = Value("INBOUND")
  }

  object FolioStatus extends Enumeration {
    val Ongoing = Value("Ongoing")
    val Removed = Value("Removed")
    val Pending = Value("Pending")
    val Secure = Value("Secure")
  }

  object FolioProtectionStatus extends Enumeration {
    val Discoverable = Value("Discoverable")
    val Withheld = Value("Withheld")
  }

  object FolioConfidentialityStatus extends Enumeration {
    val Discoverable = Value("Discoverable")
    val Withheld = Value("Withheld")
  }

}

