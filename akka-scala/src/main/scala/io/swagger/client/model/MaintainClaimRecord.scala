/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */

package io.swagger.client.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class MaintainClaimRecord (
  /* Transaction code.   */
  claimTcId: Option[MaintainClaimRecordEnums.ClaimTcId],
  /* The name of the actual claimant where the claim is not beng made by the actual claimant. This should be used concatenated with createdBy when displaying the claim (NEW FIELD)  */
  claimOnBehalfOf: Option[String],
  /* The type of claim - used in the process to determine priority.   Currently one of..  - Bankrupt  - Chattel Security  - Contributory  - Debenture interest  - Deferred debt creditor  - Fixed debenture holder  - Floating debenture holder  - Instrument by way of security  - Mortgage  - Official Assignee basic income  - Other creditor with/without POD  - Petitioning creditors costs  - Preferential unsecured creditor  - Security Interest  - Supporting Creditor Costs  - Unsecured creditor with POD  */
  claimType: Option[String],
  /* Unknown   */
  claimManualSourceCode: Option[String],
  /* Boolean indicating whether claim is being appealed in the courts.   */
  claimUnderAppeal: Option[Boolean],
  /* The (payment) priority of the claim (once claim becomes part of the estate).   */
  claimPriority: Option[Double],
  /* The reference supplied by the creditor for the claim. Not necessarily unique (many claims may well have the same reference).   */
  claimCreditorReference: Option[String],
  /* The value of the claim as notified by the debtor.   */
  claimNotifiedValue: Option[Double],
  /* The value to be paid on the claim by the estate.   */
  claimValue: Option[Double],
  /* Unknown   */
  claimContractInterest: Option[Boolean],
  /* Unknown   */
  claimValueTba: Option[Boolean],
  /* The IRD number of the claimant   */
  claimIrdNumber: Option[String],
  /* Does the claim include GST for the Official Assignee?   */
  claimIncludeOaGst: Option[Boolean],
  /* The calculated amount of GST that needs to be paid on the claim for the OA.   */
  claimOaGstAmount: Option[Double],
  /* The tax rate payable on a claim for wages.   */
  claimWagesTaxRate: Option[Double],
  /* Comments from the case officer(s) about the claim   */
  claimComments: Option[String],
  /* The date that the case officer was made aware of the claim??   */
  claimItsAwaredate: Option[Date],
  /* The date the claim was lodged with ITS.   */
  claimLodgedWithItsdate: Option[Date],
  /* Treat this as an enumerator.  The currency (code) of the claim. Loosely mapped to the ISO4217 country codes. Currently updated infrequently.   **Suggested UI implementation:** Implement as typeahead search. Big lists of enums suck.  */
  claimCurCode: Option[String],
  /* Wages tax code unique id  * NOTE: There are 0 rows in the database where this is not null.  */
  claimWtcId: Option[Double],
  /* The unique contact id of the creditor (org or person).   */
  creditorId: Option[Double],
  /* Key creditor id.  */
  organisationId: Option[Double],
  /* \"Online Claim Id\" a.k.a The Claim Registration Id  */
  claimRegistrationId: Option[Double],
  /* Comment from insolvency officer when changing claim meta-data   */
  claimReasonForChange: Option[String],
  /* Boolean flag recoding if alert has been sent.   */
  claimLargeClmFiledAlertSent: Option[Boolean],
  /* Flag recording if a creditor report has been sent.   */
  claimCredRptSent: Option[String],
  links: Option[Seq[Link]]
) extends ApiModel

object MaintainClaimRecordEnums {

  type ClaimTcId = ClaimTcId.Value
  object ClaimTcId extends Enumeration {
    val ACCEarnerPremium = Value("ACC Earner Premium")
    val DividendToUnsecuredCreditors = Value("Dividend to unsecured creditors")
    val FringeBenefitTax = Value("Fringe Benefit Tax")
    val FundsPaidToStakeholder = Value("Funds paid to stakeholder")
  }

}

