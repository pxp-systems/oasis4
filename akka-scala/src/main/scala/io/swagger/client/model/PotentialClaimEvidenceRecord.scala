/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */

package io.swagger.client.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class PotentialClaimEvidenceRecord (
  /* The channel from which the claim was recieved - DRM (aka online) POS (aka Postal) or FAX.  */
  supplyType: Option[String],
  /* Primary key  */
  id: Option[Double],
  /* The claim to which the price of evidence belongs / supports.  */
  claimRegistrationId: Option[Double],
  /* The type of evidence supplied */
  typeCode: Option[PotentialClaimEvidenceRecordEnums.TypeCode],
  /* The file name chosen by the submitter.  */
  filename: Option[String],
  /* The primary key for the object in the DRM micro-service  */
  drmId: Option[Double],
  /* The name of the user that last updated the evidence record  */
  lastUpdatedName: Option[String],
  /* The date the record was last updated */
  lastUpdated: Option[Date],
  /* The version number of the evidence record  */
  version: Option[Double],
  /* The username of the user that last updated the evidence record  */
  lastUpdatedBy: Option[String]
) extends ApiModel

object PotentialClaimEvidenceRecordEnums {

  type TypeCode = TypeCode.Value
  object TypeCode extends Enumeration {
    val CRT = Value("CRT")
    val OUT = Value("OUT")
    val WGS = Value("WGS")
    val APP = Value("APP")
    val SEC = Value("SEC")
    val TAX = Value("TAX")
    val INT = Value("INT")
  }

}

