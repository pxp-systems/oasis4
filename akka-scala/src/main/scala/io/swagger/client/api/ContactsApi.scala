/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.Address
import io.swagger.client.model.AddressSearchResults
import io.swagger.client.model.ClaimSearchResults
import io.swagger.client.model.ContactPaymentDetailRecord
import io.swagger.client.model.ContactSearchResults
import io.swagger.client.model.ErrorDescription
import io.swagger.client.model.FullContactRecord
import io.swagger.client.model.IdentitySearchResults
import io.swagger.client.model.MaintainContactRecord
import io.swagger.client.model.NameRecord
import io.swagger.client.model.NameSearchResults
import io.swagger.client.model.OrganisationSearchResults
import io.swagger.client.model.PlaceHolderModel
import io.swagger.client.model.RoleSearchResults
import io.swagger.client.model.TaxNumberSearchResults
import io.swagger.client.model.TaxNumbers
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object ContactsApi {

  /**
   *  ____ ### Overview    Allows an insolvency officer to act for a deceased participant in an insolvency prodecure.     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated &amp; authorised  * Contact record is current / selected  ____  ### Post-conditions  * User accounts associated with the current contact are disabled (not deleted - leaving room for error).  * Target contact is added to all claims &amp; estates that the current contact is a party to (target replaces current).  * Note that target contact is NOT deleted but remains as a deceased contact  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \&quot;links\&quot; element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
   * 
   * Expected answers:
   *   code 200 : FullContactRecord (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param targetAccount 
   */
  def appointExecutor(contactId: Double, targetAccount: Double)(implicit apiKey: ApiKeyValue): ApiRequest[FullContactRecord] =
    ApiRequest[FullContactRecord](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/appoint-executor", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withQueryParam("target-account", targetAccount)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[FullContactRecord](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object AppointExecutorHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \&quot;links\&quot; element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
   * 
   * Expected answers:
   *   code 200 : Address (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of sfearch enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param addressId * The unique identifier for the address. 
   */
  def contactAddress(contactId: String, addressId: String)(implicit apiKey: ApiKeyValue): ApiRequest[Address] =
    ApiRequest[Address](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/addresses/{address-id}", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withPathParam("address-id", addressId)
      .withSuccessResponse[Address](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactAddressHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Retrieves a search result of addresses related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : AddressSearchResults (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   */
  def contactAddresses(contactId: String)(implicit apiKey: ApiKeyValue): ApiRequest[AddressSearchResults] =
    ApiRequest[AddressSearchResults](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/addresses", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[AddressSearchResults](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactAddressesHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \&quot;links\&quot; element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
   * 
   * Expected answers:
   *   code 200 : NameRecord (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param nameId * The unique identifier for the contact name. 
   */
  def contactAlternateName(contactId: String, nameId: String)(implicit apiKey: ApiKeyValue): ApiRequest[NameRecord] =
    ApiRequest[NameRecord](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/names/{name-id}", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withPathParam("name-id", nameId)
      .withSuccessResponse[NameRecord](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactAlternateNameHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Retrieves a search result of alternate names related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : NameSearchResults (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   */
  def contactAlternateNames(contactId: String)(implicit apiKey: ApiKeyValue): ApiRequest[NameSearchResults] =
    ApiRequest[NameSearchResults](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/names", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[NameSearchResults](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactAlternateNamesHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   *  ### Overview  Lists the claims associated with an individual system user.    ____ ** UC Mapping: **   ** Other notes: **  This would be a good place for future NZBN integration - when businesses are able to list thier account details under the NZBN   ____  ### Pre-conditions  * User is authenticated &amp; authorised  ____  ### Post-conditions  * Search result is returned  ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \&quot;links\&quot; element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Search result |    ### Links        -- Not applicable --   
   * 
   * Expected answers:
   *   code 200 : ClaimSearchResults (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   */
  def contactClaims(contactId: String)(implicit apiKey: ApiKeyValue): ApiRequest[ClaimSearchResults] =
    ApiRequest[ClaimSearchResults](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/claims", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[ClaimSearchResults](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactClaimsHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   *  ____ ### Overview    Allows an insolvency userto mark a contact as being deceased.      May only be on contacts that do not have an associated user account (that is to say, only one of the contact record may have an active user account)      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses are added to the current contact     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated &amp; authorised  * Contact record is current / selected  ____  ### Post-conditions  * User accounts associated contact are disabled (not deleted - leaving room for error).  * Suppress correspondence flag is set.  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \&quot;links\&quot; element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
   * 
   * Expected answers:
   *   code 200 : FullContactRecord (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param targetAccount 
   */
  def contactDeceased(contactId: Double, targetAccount: Double)(implicit apiKey: ApiKeyValue): ApiRequest[FullContactRecord] =
    ApiRequest[FullContactRecord](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/deceased", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withQueryParam("target-account", targetAccount)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[FullContactRecord](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactDeceasedHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Retrieves a search result of estates related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : PlaceHolderModel (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   */
  def contactEstates(contactId: String)(implicit apiKey: ApiKeyValue): ApiRequest[PlaceHolderModel] =
    ApiRequest[PlaceHolderModel](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/estates", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[PlaceHolderModel](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactEstatesHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Retrieves a search result of identities related to the contact      ****     **UC Mapping:**         **Permissions: ** Users can only view thier own identities      ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : IdentitySearchResults (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   */
  def contactIdentities(contactId: String)(implicit apiKey: ApiKeyValue): ApiRequest[IdentitySearchResults] =
    ApiRequest[IdentitySearchResults](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/user-account/identities", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[IdentitySearchResults](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactIdentitiesHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Updates payment settings related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated &amp; authorised   * COntact record is current / selected   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Contact record |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : FullContactRecord (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param contactRecord 
   */
  def contactMaintain(contactId: String, contactRecord: MaintainContactRecord)(implicit apiKey: ApiKeyValue): ApiRequest[FullContactRecord] =
    ApiRequest[FullContactRecord](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/maintain", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(contactRecord)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[FullContactRecord](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactMaintainHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview      Modifies an address record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated &amp; authorised    ____    ### Post-conditions    * Address record is updated    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \&quot;links\&quot; element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
   * 
   * Expected answers:
   *   code 200 : Address (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param addressId * The unique identifier for the address. 
   * @param addressRecord * The unique identifier for the address. 
   */
  def contactMaintainAddress(contactId: String, addressId: String, addressRecord: Address)(implicit apiKey: ApiKeyValue): ApiRequest[Address] =
    ApiRequest[Address](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/addresses/{address-id}/maintain", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(addressRecord)
      .withPathParam("contact-id", contactId)
      .withPathParam("address-id", addressId)
      .withSuccessResponse[Address](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactMaintainAddressHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated &amp; authorised    ____    ### Post-conditions    * Name record is updated    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \&quot;links\&quot; element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
   * 
   * Expected answers:
   *   code 200 : NameRecord (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param nameId * The unique identifier for the name record. 
   * @param modifiedName * The unique identifier for the name record. 
   */
  def contactMaintainAlternateName(contactId: String, nameId: String, modifiedName: NameRecord)(implicit apiKey: ApiKeyValue): ApiRequest[NameRecord] =
    ApiRequest[NameRecord](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/names/{name-id}/maintain", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(modifiedName)
      .withPathParam("contact-id", contactId)
      .withPathParam("name-id", nameId)
      .withSuccessResponse[NameRecord](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactMaintainAlternateNameHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     An alternate address record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Address record is created    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \&quot;links\&quot; element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
   * 
   * Expected answers:
   *   code 200 : Address (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param addressRecord * The unique identifier for the address. 
   */
  def contactNewAddress(contactId: String, addressRecord: Address)(implicit apiKey: ApiKeyValue): ApiRequest[Address] =
    ApiRequest[Address](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/addresses/new", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(addressRecord)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[Address](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactNewAddressHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is created    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \&quot;links\&quot; element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
   * 
   * Expected answers:
   *   code 200 : NameRecord (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param newName * The json name record payload 
   */
  def contactNewAlternateName(contactId: String, newName: NameRecord)(implicit apiKey: ApiKeyValue): ApiRequest[NameRecord] =
    ApiRequest[NameRecord](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/names/new", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(newName)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[NameRecord](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactNewAlternateNameHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Retrieves a search result of organisations relted to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : OrganisationSearchResults (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   */
  def contactOrganisations(contactId: String)(implicit apiKey: ApiKeyValue): ApiRequest[OrganisationSearchResults] =
    ApiRequest[OrganisationSearchResults](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/organisations", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[OrganisationSearchResults](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactOrganisationsHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Retrieves current payment detail settings settings for the contact record      ****     **UC Mapping: **     ** Other notes: **  This would be a good place for future NZBN integration - when businesses are able to list thier account details under the NZBN     ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned   * Audit record is created against the contact / preferences    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment-details record |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : ContactPaymentDetailRecord (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   */
  def contactPaymentSettings(contactId: String)(implicit apiKey: ApiKeyValue): ApiRequest[ContactPaymentDetailRecord] =
    ApiRequest[ContactPaymentDetailRecord](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/payment-details", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[ContactPaymentDetailRecord](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactPaymentSettingsHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Retrieves current preferences / communication settings for the contact record      ****     **UC Mapping: **       ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned   * Audit record is created against the contact / preferences    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Preferences record |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : PlaceHolderModel (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   */
  def contactPreferences(contactId: String)(implicit apiKey: ApiKeyValue): ApiRequest[PlaceHolderModel] =
    ApiRequest[PlaceHolderModel](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/preferences", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[PlaceHolderModel](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactPreferencesHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : RoleSearchResults (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   */
  def contactRoles(contactId: String)(implicit apiKey: ApiKeyValue): ApiRequest[RoleSearchResults] =
    ApiRequest[RoleSearchResults](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/roles", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[RoleSearchResults](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactRolesHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * **Search the insolvency &amp; SIO registers for a contact.**   * Objective is to avoid duplication &amp; encourage re-use   * Aid positive identification   * UX-UI flows should make it harder to create a contact than to re-use one    **NOTES FOR SEARCH INDEX POPULATION:**   * Aliases and names should be peers in terms of search, with a minor preference given to a primary name where there are multiple matches   * Contact name should be returned next to alias in search result string(s)   * Index to return a **graph** of contacts (people), phone numbers, addresses, and organisations associated to the contact       * Contact to contact graph       * Address to contact graph       * Company to contact graph       * Phone number to contact graph        **Intended behaviour:** it is intended that this functionality be used to implement typeahead searches possibly as a single search combo box - *in the short term it is possibly simpler but a lot less elegant and a lot less fun to implement as multiple typeaheads*.          --- SOME SEARCH PARAMETERS NOT IMPLEMENTED ---         The following booleans have not been carried over into this design:         * Show all addresses         * Withhold         * Main contact         * Protect from edit         
   * 
   * Expected answers:
   *   code 200 : ContactSearchResults (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param addresses **Single search combo box for:** * Physical &amp; Postal Addresses (only those populated against a contact - not all of PAF / NZAD)   *__Traceability to existing search parameters:__*   * Street Name   * Region   * Suburb   * Country   * City / Town * Email addresses (in use on a contact) * Social media addresses (in use on a contact) * Phone numbers 
   * @param names * Searches **both** primary contact and alias records. * Ideally implemented as typeahead  **Traceability to current search:** This parameter is intended to implement all of the following existing search parameters... * Last Name * First Name * Middle Name(s) * Organisation Name  and, in addition, should search any associated aliases for these same fields. 
   * @param excludeNotInUse * Excludes contacts that are not in use (so; not associated to an estate) from the scope of the search. 
   * @param excludeBranches * Excludes branches from the scope of the search. 
   * @param excludeAlternate * Excludes aliases and secondary addresses from the scope of the search. * Very bad idea, would like to deprecate if possible. 
   * @param page The page in the collection to return. Default is page 1.
   * @param pageSize The requested number of items to include in each page returned. Default is 20. 
   * @param sortOrder The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
   * @param sortBy The property to sort the collection by.
   */
  def contactSearch(addresses: Option[String] = None, names: Option[String] = None, excludeNotInUse: Option[Boolean], excludeBranches: Option[Boolean], excludeAlternate: Option[Boolean], page: Option[Int], pageSize: Option[Int], sortOrder: Option[String], sortBy: Option[String])(implicit apiKey: ApiKeyValue): ApiRequest[ContactSearchResults] =
    ApiRequest[ContactSearchResults](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/search", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withQueryParam("addresses", addresses)
      .withQueryParam("names", names)
      .withQueryParam("exclude-not-in-use", excludeNotInUse)
      .withQueryParam("exclude-branches", excludeBranches)
      .withQueryParam("exclude-alternate", excludeAlternate)
      .withQueryParam("page", page)
      .withQueryParam("page-size", pageSize)
      .withQueryParam("sort-order", sortOrder)
      .withQueryParam("sort-by", sortBy)
      .withSuccessResponse[ContactSearchResults](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactSearchHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Retrieves a search result of tax numbers related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : TaxNumberSearchResults (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   */
  def contactTaxNumbers(contactId: String)(implicit apiKey: ApiKeyValue): ApiRequest[TaxNumberSearchResults] =
    ApiRequest[TaxNumberSearchResults](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/tax-numbers", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[TaxNumberSearchResults](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactTaxNumbersHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview      Retrieves a contact record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \&quot;links\&quot; element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
   * 
   * Expected answers:
   *   code 200 : FullContactRecord (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   */
  def contacts(contactId: String)(implicit apiKey: ApiKeyValue): ApiRequest[FullContactRecord] =
    ApiRequest[FullContactRecord](ApiMethods.GET, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[FullContactRecord](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object ContactsHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   *  # ------------------------------ # Not in scope of current phase # ------------------------------ ____ ### Overview    Allows a user to link / merge together multiple identities if they have ended up with multiple OASIS accounts for whatever reason      User will be required to authenticate to the target account      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses from the target are added to the current contact.      ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated &amp; authorised  * Contact record is current / selected  ____  ### Post-conditions  * Target contact is marked as deleted.  * All authentication tokens and links are deleted from target contact  * All authentication tokens and links are copied to current contact  * Current contact is joined to all estates that target is currently joined to (current replaces target).  * Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \&quot;links\&quot; element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
   * 
   * Expected answers:
   *   code 200 : FullContactRecord (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param targetAccount 
   */
  def linkAccount(contactId: Double, targetAccount: Double)(implicit apiKey: ApiKeyValue): ApiRequest[FullContactRecord] =
    ApiRequest[FullContactRecord](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/link-account", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withQueryParam("target-account", targetAccount)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[FullContactRecord](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object LinkAccountHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Updates adjudication details related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated &amp; authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : PlaceHolderModel (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param paymentDetails 
   */
  def maintainAdjudicationDetails(contactId: String, paymentDetails: PlaceHolderModel)(implicit apiKey: ApiKeyValue): ApiRequest[PlaceHolderModel] =
    ApiRequest[PlaceHolderModel](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/adjudication-details/maintain", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(paymentDetails)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[PlaceHolderModel](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object MaintainAdjudicationDetailsHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Updates payment settings related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated &amp; authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : PlaceHolderModel (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param paymentDetails 
   */
  def maintainContactPaymentSettings(contactId: String, paymentDetails: ContactPaymentDetailRecord)(implicit apiKey: ApiKeyValue): ApiRequest[PlaceHolderModel] =
    ApiRequest[PlaceHolderModel](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/payment-details/maintain", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(paymentDetails)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[PlaceHolderModel](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object MaintainContactPaymentSettingsHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Updates a given IRD / GST number related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated &amp; authorised   ____   ### Post-conditions   * Tax record is updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Updated |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : TaxNumbers (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param taxNumberId * The id of the specific record. 
   * @param taxNumberDetails 
   */
  def maintainTaxNumber(contactId: String, taxNumberId: String, taxNumberDetails: TaxNumbers)(implicit apiKey: ApiKeyValue): ApiRequest[TaxNumbers] =
    ApiRequest[TaxNumbers](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/tax-numbers/{tax-number-id}/maintain", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(taxNumberDetails)
      .withPathParam("contact-id", contactId)
      .withPathParam("tax-number-id", taxNumberId)
      .withSuccessResponse[TaxNumbers](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object MaintainTaxNumberHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   *  ____ ### Overview    Allows an insolvency user merge together multiple contacts.       May only be on contacts that do not have an associated user account (that is to say, only one of the contact record may have an active user aacount)      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses are added to the current contact     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated &amp; authorised  * Contact record is current / selected  * Target contact does not have an active user account associated.  ____  ### Post-conditions  * Target contact is marked as deleted.  * Current contact is joined to all estates that target is currently joined to (current replaces target).  * Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \&quot;links\&quot; element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
   * 
   * Expected answers:
   *   code 200 : FullContactRecord (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param targetAccount 
   */
  def mergeContact(contactId: Double, targetAccount: Double)(implicit apiKey: ApiKeyValue): ApiRequest[FullContactRecord] =
    ApiRequest[FullContactRecord](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/merge-contact", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withQueryParam("target-account", targetAccount)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[FullContactRecord](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object MergeContactHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   *  ### Overview  Create a new contact record.     **** **Users:** Insolvency officers and system  * Create contact from investagative activity - Insolvency Officer * Create contact from statement of affairs - System * Create contact from Claim Registration - Creditor (this is a bit of an assumption that the user will be forced into a discreet account creation activity, UI/UX may see this done by the &#39;system&#39;)  ****   **UC Mapping:** New Contact  **** **QA / QC notes:** We are beginning the process of refactoring contact into more discreet and contained impllementations. There may be more to be done here. ****  ____ ### Pre-conditions * none   ____ ### Post-conditions * User authorisation is checked * Contact resource is created / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Contact not found |  ### HATEOAS \&quot;links\&quot; element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: New contact** | New contact |   &lt;br /&gt; ****   **Case 1** - New contact created       \&quot;links\&quot;: [        ## ----------------- Navigation links -----------------      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/824462\&quot;,        \&quot;rel\&quot;: \&quot;self\&quot;,        \&quot;method\&quot;: \&quot;GET\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact\&quot;,        \&quot;rel\&quot;: \&quot;contact.search\&quot;,        \&quot;method\&quot;: \&quot;GET\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/auditlogs\&quot;,        \&quot;rel\&quot;: \&quot;contact.auditlogs\&quot;,        \&quot;method\&quot;: \&quot;GET\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/estates\&quot;,        \&quot;rel\&quot;: \&quot;contact.estates\&quot;,        \&quot;method\&quot;: \&quot;GET\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/claims\&quot;,        \&quot;rel\&quot;: \&quot;contact.claims\&quot;,        \&quot;method\&quot;: \&quot;GET\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/organisations\&quot;,        \&quot;rel\&quot;: \&quot;contact.organisations\&quot;,        \&quot;method\&quot;: \&quot;GET\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/alternate-names\&quot;,        \&quot;rel\&quot;: \&quot;contact.alternate-names\&quot;,        \&quot;method\&quot;: \&quot;GET\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/accounts\&quot;,        \&quot;rel\&quot;: \&quot;contact.accounts\&quot;,        \&quot;method\&quot;: \&quot;GET\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/preferences\&quot;,        \&quot;rel\&quot;: \&quot;contact.preferences\&quot;,        \&quot;method\&quot;: \&quot;GET\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\&quot;,        \&quot;rel\&quot;: \&quot;contact.paymentdetails\&quot;,        \&quot;method\&quot;: \&quot;GET\&quot;      },            ## ----------------- Modify self / status changes -----------------      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/824462/maintain\&quot;,        \&quot;rel\&quot;: \&quot;contact.maintain\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/preferences\&quot;,        \&quot;rel\&quot;: \&quot;contact.preferences\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\&quot;,        \&quot;rel\&quot;: \&quot;contact.paymentdetails\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },       {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/alternate-names\&quot;,        \&quot;rel\&quot;: \&quot;contact.alternate-names\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/linkaccount\&quot;,        \&quot;rel\&quot;: \&quot;contact.linkaccount\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\&quot;,        \&quot;rel\&quot;: \&quot;contact.unlinkaccount\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\&quot;,        \&quot;rel\&quot;: \&quot;contact.mergecontact\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/deceased\&quot;,        \&quot;rel\&quot;: \&quot;contact.deceased\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\&quot;,        \&quot;rel\&quot;: \&quot;contact.supresscorrespondence\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;                # move this one into preferences maybe?      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/protectfromedit\&quot;,        \&quot;rel\&quot;: \&quot;contact.protectfromedit\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/withholdadress\&quot;,        \&quot;rel\&quot;: \&quot;contact.wihtholdaddress\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/appointexecutor\&quot;,        \&quot;rel\&quot;: \&quot;contact.appointexecutor\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/modifyadjudicationdetails\&quot;,        \&quot;rel\&quot;: \&quot;contact.modify-adjudication-details\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      },      {        \&quot;href\&quot;: \&quot;https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/modifyadjudicationdetails\&quot;,        \&quot;rel\&quot;: \&quot;contact.modify-adjudication-details\&quot;,        \&quot;method\&quot;: \&quot;POST\&quot;      }      ]       
   * 
   * Expected answers:
   *   code 201 : FullContactRecord (The modified claim record.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The operation parameters are invalid.)
   *   code 401 : ErrorDescription (The requester is not authenticated.)
   *   code 403 : ErrorDescription (The requester is not authorised for this operation.)
   *   code 404 : ErrorDescription (Resource not found.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactRecord The detail of the new contact record to be created. 
   */
  def newContact(contactRecord: FullContactRecord)(implicit apiKey: ApiKeyValue): ApiRequest[FullContactRecord] =
    ApiRequest[FullContactRecord](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/new", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(contactRecord)
      .withSuccessResponse[FullContactRecord](201)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[ErrorDescription](401)
      .withErrorResponse[ErrorDescription](403)
      .withErrorResponse[ErrorDescription](404)
      .withErrorResponse[ErrorDescription](500)
      
  object NewContactHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   * ### Overview     Updates a given IRD / GST number related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated &amp; authorised   ____   ### Post-conditions   * Tax record is updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \&quot;links\&quot; element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Created |      ### Links          Placeholder    
   * 
   * Expected answers:
   *   code 200 : TaxNumbers (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param taxNumberDetails 
   */
  def newTaxNumber(contactId: String, taxNumberDetails: TaxNumbers)(implicit apiKey: ApiKeyValue): ApiRequest[TaxNumbers] =
    ApiRequest[TaxNumbers](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/tax-numbers/new", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withBody(taxNumberDetails)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[TaxNumbers](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object NewTaxNumberHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }
  /**
   *  ____ ### Overview   Allows a user to associate an identity with a contact.  Authentication redirects to WSO2 identity server.    Triggered in the following ways:  - Invite token  sent by insolvency officer adding as part of a contact  - Token sent as part of new business   - Token sent as part of a claim registration     ****    **UC Mapping:**     ____  ### Pre-conditions  * User has been sent activation token  ____  ### Post-conditions  * User is authenticated by WSO2 indentity manager.  * User account is associated with the authenticator (via the muid passed back from WSO2)   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \&quot;links\&quot; element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
   * 
   * Expected answers:
   *   code 200 : FullContactRecord (The search results for the given provider search parameters.)
   *              Headers :
   *                api-business-govt-nz-Request-Id - MBIE Request id header
   *                api-business-govt-nz-Correlation-Id - MBIE Correlation id header
   *                date - Response parameter. Date/time the response was generated (in Greenwich mean time).
   *                service-version - The minor version of the API.
   *   code 400 : ErrorDescription (The combination of search enquiry parameters is invalid.)
   *   code 401 :  (The requester is not authenticated.)
   *   code 403 :  (The requester is not authorised for this operation.)
   *   code 500 : ErrorDescription (An unexpected internal server error occurred.)
   * 
   * Available security schemes:
   *   jwt (apiKey)
   * 
   * @param contactId * The unique identifier for the contact. 
   * @param inviteToken 
   */
  def registerIdentity(contactId: Double, inviteToken: String)(implicit apiKey: ApiKeyValue): ApiRequest[FullContactRecord] =
    ApiRequest[FullContactRecord](ApiMethods.POST, "https://virtserver.swaggerhub.com/apis/OASIS4-development/oasis4/1.4.13", "/contacts/{contact-id}/user-account/register-identity", "application/json")
      .withApiKey(apiKey, "Authorization", HEADER)
      .withQueryParam("invite-token", inviteToken)
      .withPathParam("contact-id", contactId)
      .withSuccessResponse[FullContactRecord](200)
      .withErrorResponse[ErrorDescription](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[ErrorDescription](500)
      
  object RegisterIdentityHeaders { 
    def apiBusinessGovtNzRequestId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Request-Id")
    def apiBusinessGovtNzCorrelationId(r: ApiReturnWithHeaders) = r.getStringHeader("api-business-govt-nz-Correlation-Id")
    def date(r: ApiReturnWithHeaders) = r.getDateTimeHeader("date")
    def serviceVersion(r: ApiReturnWithHeaders) = r.getStringHeader("service-version")
  }


}

